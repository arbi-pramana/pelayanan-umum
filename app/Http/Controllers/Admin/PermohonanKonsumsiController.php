<?php

namespace App\Http\Controllers\Admin;

use App\Models\Karyawan;
use App\Models\SumberDana;
use App\Models\Notification;
use Illuminate\Http\Request;
use App\Models\PemesananRuangan;
use App\Models\PermohonanKonsumsi;
use LaraSpells\FormModel\FormModel;
use App\Http\Controllers\Controller;

/**
 * Generated by LaraSpell
 *
 * @author  Ditama Digital <info@ditamadigtal.co.id>
 * @created Wed, 06 Jun 2018 09:10:05 +0000
 */
class PermohonanKonsumsiController extends Controller
{

    /**
     * Permohonan konsumsi model
     *
     * @var App\Models\PermohonanKonsumsi
     */
    protected $permohonanKonsumsi;
    protected $sumberDana;
    protected $karyawan;

    /**
     * Constructor
     *
     * @param  App\Models\PermohonanKonsumsi $permohonanKonsumsi
     * @return void
     */
    public function __construct(PermohonanKonsumsi $permohonanKonsumsi, SumberDana $sumberDana, Karyawan $karyawan)
    {
        $this->permohonanKonsumsi = $permohonanKonsumsi;
        $this->sumberDana = $sumberDana;
        $this->karyawan = $karyawan;
    }

    /**
     * Display list permohonan_konsumsi
     *
     * @param  Illuminate\Http\Request $request
     * @return Illuminate\Http\Response
     */
    public function pageList(Request $request)
    {
        $query = $this->permohonanKonsumsi->query();
        
        $query->select([
            "permohonan_konsumsi.id",
            "permohonan_konsumsi.no_permohonan_konsumsi",
            "permohonan_konsumsi.tanggal",
            "permohonan_konsumsi.tanggal_selesai",
            "permohonan_konsumsi.jam",
            // "sumber_dana.nama_sumber_dana",
            "permohonan_konsumsi.kegiatan",
            "permohonan_konsumsi.jenis_konsumsi",
            "permohonan_konsumsi.jumlah_peserta",
            "permohonan_konsumsi.pemohon",
            "permohonan_konsumsi.sumber_dana",
            "permohonan_konsumsi.jumlah",
            // "karyawan.nama as nama_supervisor",
            "permohonan_konsumsi.status_supervisor",
            // "manager.nama as nama_manajer",
            "permohonan_konsumsi.status_manajer",
            "permohonan_konsumsi.status_pj",
            "permohonan_konsumsi.status_pelaksana",
            "permohonan_konsumsi.keterangan",
            "permohonan_konsumsi.attachment",
            "permohonan_konsumsi.alasan_reject",
            "permohonan_konsumsi.created_at",
            "permohonan_konsumsi.updated_at",
        ]);
        // ->join('sumber_dana', 'permohonan_konsumsi.sumber_dana', '=', 'sumber_dana.id');
        // ->join('karyawan', 'permohonan_konsumsi.supervisor', '=', 'karyawan.id')
        // ->join('karyawan as manager', 'permohonan_konsumsi.manajer', '=', 'manager.id');

        $data['title'] = 'List Permohonan Konsumsi';
        $data['pagination'] = $query->latest()->get();

        return view('admin::permohonan_konsumsi.page-list', $data);
    }

    /**
     * Show detail permohonanKonsumsi
     *
     * @param  Illuminate\Http\Request $request
     * @param  string $id
     * @return Illuminate\Http\Response
     */
    public function pageDetail($id)
    {
        $permohonanKonsumsi = $this->findOrFail($id);

        $notif = Notification::where('permohonan_konsumsi_id',$permohonanKonsumsi->id)->first();
        $notif->status = true;
        $notif->save();

        $data['title'] = 'Detail Permohonan Konsumsi';
        $data['permohonanKonsumsi'] = $permohonanKonsumsi;

        return view('admin::permohonan_konsumsi.page-detail', $data);
    }

    /**
     * Display form create permohonanKonsumsi
     *
     * @param  Illuminate\Http\Request $request
     * @return Illuminate\Http\Response
     */
    public function formCreate(Request $request)
    {
        $data['title'] = 'Form Create Permohonan Konsumsi';
        // phpcs:ignore
        $data['form'] = $this->form(new PermohonanKonsumsi)->withAction(route('admin::permohonan-konsumsi.post-create'));

        return view('admin::permohonan_konsumsi.form-create', $data);
    }

    /**
     * Insert new permohonanKonsumsi
     *
     * @param  Illuminate\Http\Request $request
     * @return Illuminate\Http\Response
     */
    public function postCreate(Request $request)
    {
        $this->form(new PermohonanKonsumsi)->submit($request);

        $message = 'Permohonan Konsumsi has been created!';
        return redirect()->route('admin::permohonan-konsumsi.page-list')->with('info', $message);
    }

    /**
     * Display form edit permohonanKonsumsi
     *
     * @param  Illuminate\Http\Request $request
     * @param  string $id
     * @return Illuminate\Http\Response
     */
    public function formEdit(Request $request, $id)
    {
        $permohonanKonsumsi = $this->findOrFail($id);
        
        $data['title'] = 'Form Edit Permohonan Konsumsi';
        // phpcs:ignore
        $data['form'] = $this->form($permohonanKonsumsi)->withAction(route('admin::permohonan-konsumsi.post-edit', [$id]));

        return view('admin::permohonan_konsumsi.form-edit', $data);
    }

    public function approve($id)
    {
        \DB::table('permohonan_konsumsi')
            ->where('id', '=', $id)
            ->update(['status_pj' => 'Approved']);

        $notif = Notification::where('permohonan_konsumsi_id',$id)->first();
        if($notif){
            $notif->status = true;
            $notif->save();
        }

        return redirect('admin/permohonan-konsumsi');
    }

    public function terlaksana($id)
    {
        \DB::table('permohonan_konsumsi')
            ->where('id', '=', $id)
            ->update(['status_pelaksana' => 'Terlaksana']);

        return redirect('admin/permohonan-konsumsi')->with('info','Berhasil Merubah Status');
    }

    public function reject(Request $req)
    {
        \DB::table('permohonan_konsumsi')
            ->where('id', '=', $req->id_konsumsi)
            ->update(['status_pj' => 'Rejected','alasan_reject'=>$req->alasan]);

        return redirect('admin/permohonan-konsumsi')->with('info','Berhasil Merubah Status');
    }

    public function approveSupervisor($id)
    {
        \DB::table('permohonan_konsumsi')
            ->where('id', '=', $id)
            ->update(['status_supervisor' => 'Approved']);

        return redirect('admin/permohonan-konsumsi');
    }

    public function approveManager($id)
    {
        \DB::table('permohonan_konsumsi')
            ->where('id', '=', $id)
            ->update(['status_manajer' => 'Approved']);

        return redirect('admin/permohonan-konsumsi');
    }

    public function approveManagerList($id)
    {
        \DB::table('permohonan_konsumsi')
            ->where('id', '=', $id)
            ->update(['status_manajer' => 'Approved']);

        return redirect('/listpermohonankonsumsi');
    }

    public function approveSupervisorList($id)
    {
        \DB::table('permohonan_konsumsi')
            ->where('id', '=', $id)
            ->update(['status_supervisor' => 'Approved']);

        return redirect('/listpermohonankonsumsi');
    }

    /**
     * Update specified permohonanKonsumsi
     *
     * @param  Illuminate\Http\Request $request
     * @param  string $id
     * @return Illuminate\Http\Response
     */
    public function postEdit(Request $request, $id)
    {
        $permohonanKonsumsi = $this->findOrFail($id);

        $this->form($permohonanKonsumsi)->submit($request);

        $message = 'Permohonan Konsumsi has been updated!';
        return redirect()->route('admin::permohonan-konsumsi.page-list')->with('info', $message);
    }

    /**
     * Delete specified permohonanKonsumsi
     *
     * @param  Illuminate\Http\Request $request
     * @param  string $id
     * @return Illuminate\Http\Response
     */
    public function delete(Request $request, $id)
    {
        $permohonanKonsumsi = $this->findOrFail($id);

        // Delete data
        $deleted = $permohonanKonsumsi->delete();
        if (!$deleted) {
            $message = 'Something went wrong when delete Permohonan Konsumsi';
            return back()->with('danger', $message);
        }
        $notif = Notification::where('permohonan_konsumsi_id',$id)->first();
        if($notif){
            $notif->delete();
        }

        $message = 'Permohonan Konsumsi has been deleted!';
        return redirect()->route('admin::permohonan-konsumsi.page-list')->with('info', $message);
    }

    public function deletelist(Request $request, $id)
    {
        $permohonanKonsumsi = $this->findOrFail($id);

        // Delete data
        $deleted = $permohonanKonsumsi->delete();
        if (!$deleted) {
            $message = 'Something went wrong when delete Permohonan Konsumsi';
            return back()->with('danger', $message);
        }
        
        $notif = Notification::where('permohonan_konsumsi_id',$id)->first();
        if($notif){
            $notif->delete();
        }

        $message = 'Permohonan Konsumsi has been deleted!';
        return redirect('/listpermohonankonsumsi')->with('info', $message);
    }

    /**
     * Find permohonanKonsumsi by 'id' or display 404 if not exists
     *
     * @return Illuminate\Http\Response
     */
    protected function findOrFail($id)
    {
        $permohonanKonsumsi = $this->permohonanKonsumsi->find($id);
        if (!$permohonanKonsumsi) {
            return abort(404, 'Permohonan Konsumsi not found');
        }

        return $permohonanKonsumsi;
    }

    /**
     * Setup FormModel
     *
     * @param  App\Models\PermohonanKonsumsi $permohonanKonsumsi
     * @return LaraSpells\FormModel\FormModel
     */
    protected function form(PermohonanKonsumsi $permohonanKonsumsi)
    {
        return FormModel::make($permohonanKonsumsi, [
            'no_permohonan_konsumsi' => [
                'input' => "text",
                'label' => "No Permohonan Konsumsi",
                'maxlength' => "255",
                'rules' => [
                    "required",
                    "max:255"
                ]
            ],
            'tanggal' => [
                'input' => "datepicker",
                'label' => "Tanggal",
                'rules' => [
                    "required"
                ]
            ],
            'jumlah' => [
                'input' => "number",
                'label' => "Jumlah",
                'rules' => [
                    "required"
                ]
            ],
            'sumber_dana' => [
                'input' => "select",
                'label' => "Sumber Dana",
                'options' => $this->getSumberDana(),
                'rules' => [
                    "required",
                ]
            ],
            'kegiatan' => [
                'input' => "text",
                'label' => "Kegiatan",
                'maxlength' => "255",
                'rules' => [
                    "required",
                    "max:255"
                ]
            ],
            'jenis_konsumsi' => [
                'input' => "text",
                'label' => "Jenis Konsumsi",
                'maxlength' => "255",
                'rules' => [
                    "required",
                    "max:255"
                ]
            ],
            'jumlah_peserta' => [
                'input' => "number",
                'label' => "Jumlah",
                'rules' => [
                    "required",
                    "max:100"
                ]
            ],
            'pemohon' => [
                'input' => "select",
                'label' => "Pemohon",
                'options' => $this->getPemohon(),
                'rules' => [
                    "required"
                ]
            ],
            // 'supervisor' => [
            //     'input' => "select",
            //     'label' => "Supervisor",
            //     'options' => $this->getSupervisor(),
            //     'rules' => [
            //         "required",
            //     ]
            // ],
            'status_pj' => [
                'input' => "select",
                'label' => "Status",
                'options' => [
                    [
                        'label' => 'Rejected',
                        'value' => 'Rejected'
                    ],
                    [
                        'label' => 'Pending',
                        'value' => 'Pending'
                    ],
                    [
                        'label' => 'Approved',
                        'value' => 'Approved'
                    ]
                ],
                'rules' => [
                    "required",
                ]
            ],
            // 'manajer' => [
            //     'input' => "select",
            //     'label' => "Manajer",
            //     'options' => $this->getManajer(),
            //     'rules' => [
            //         "required"
            //     ]
            // ],
            // 'status_manajer' => [
            //     'input' => "select",
            //     'label' => "Status Manajer",
            //     'options' => [
            //         [
            //             'label' => 'Pending',
            //             'value' => 'Pending'
            //         ],
            //         [
            //             'label' => 'Approved',
            //             'value' => 'Approved'
            //         ]
            //     ],
            //     'rules' => [
            //         "required",
            //     ]
            // ],
            'keterangan' => [
                'input' => "textarea",
                'label' => "Keterangan",
                'rules' => [
                    "required",
                ]
            ]
        ])->withViewData([
            // phpcs:ignore
            'before_button_save' => '<a class="btn btn-default" href="'.route('admin::permohonan-konsumsi.page-list').'"><i class="fa fa-chevron-left"></i> Cancel</a>&nbsp;',
        ]);
    }

           /**
     * Get Anggaran Sumber Dana
     *
     * @return array
     */
    protected function getSumberDana()
    {
        return $this->sumberDana
            ->select(['id as value', \DB::raw('concat(id, " - ", nama_sumber_dana) as label')])
            ->get()
            ->toArray();
    }

          /**
     * Get Anggaran Supervisor
     *
     * @return array
     */
    protected function getPemohon()
    {
        return $this->karyawan
            ->select(['nama as value', 'nama as label'])
            ->get()
            ->toArray();
    }

    protected function getSupervisor()
    {
        return $this->karyawan
            ->select(['id as value', 'nama as label'])
            ->where('role', 'supervisor')
            ->get()
            ->toArray();
    }

          /**
     * Get Anggaran Manajer
     *
     * @return array
     */
    protected function getManajer()
    {
        return $this->karyawan
            ->select(['id as value', 'nama as label'])
            ->where('role', 'manajer')
            ->get()
            ->toArray();
    }

    public function getJson(Request $req)
    {
        $data = PemesananRuangan::where('pemesanan_ruangan.id', $req->id)
                ->join('ruang', 'pemesanan_ruangan.id_ruang', '=', 'ruang.id')
                ->first();
        return $data;
    }
}
