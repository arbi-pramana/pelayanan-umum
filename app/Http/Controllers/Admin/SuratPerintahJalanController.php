<?php

namespace App\Http\Controllers\Admin;

use Mail;
use App\Models\Driver;
use App\Models\Setting;
use App\Models\Karyawan;
use App\Mail\DriverEmail;
use App\Models\Kendaraan;
use Illuminate\Http\Request;
use App\Models\SuratPerintahJalan;
use LaraSpells\FormModel\FormModel;
use App\Http\Controllers\Controller;
use App\Models\PermohonanPemakaianKendaraan;
use Illuminate\Support\Facades\DB;

/**
 * Generated by LaraSpell
 *
 * @author  Ditama Digital <info@ditamadigtal.co.id>
 * @created Thu, 19 Jul 2018 11:00:32 +0000
 */
class SuratPerintahJalanController extends Controller
{

    /**
     * Surat perintah jalan model
     *
     * @var App\Models\SuratPerintahJalan
     */
    protected $suratPerintahJalan;
    protected $karyawan;

    /**
     * Constructor
     *
     * @param  App\Models\SuratPerintahJalan $suratPerintahJalan
     * @return void
     */
    public function __construct(SuratPerintahJalan $suratPerintahJalan, Karyawan $karyawan)
    {
        $this->suratPerintahJalan = $suratPerintahJalan;
        $this->karyawan = $karyawan;
    }

    /**
     * Display list surat_perintah_jalan
     *
     * @param  Illuminate\Http\Request $request
     * @return Illuminate\Http\Response
     */
    public function getBiayaPerMeter(Request $request)
    {
        $setting = Setting::where('key', 'Biaya Per Meter')->first();
        return $setting;
    }

    public function getPermohonanKendaraan(Request $request)
    {
        // dd($request->id);
        $permohonan = PermohonanPemakaianKendaraan::where('id', $request->id)->first();
        return $permohonan;
    }

    public function pageList(Request $request)
    {

        $query = $this->suratPerintahJalan->query();
            // "permohonan_pemakaian_kendaraan.pemohon",
            // "permohonan_pemakaian_kendaraan.tujuan",
            // "permohonan_pemakaian_kendaraan.keperluan");
        $query->select(
            'surat_perintah_jalan.*',
            'driver.nama_driver'
         );
        $query->join('permohonan_pemakaian_kendaraan','surat_perintah_jalan.id_permohonan_pemakaian_kendaraan','=','permohonan_pemakaian_kendaraan.id')
        ->join('driver','surat_perintah_jalan.driver_id','=','driver.id');
        // $query->join('driver','surat_perintah_jalan.driver_id','=','driver.id')->get();
        // dd($query);

        // dd($query->paginate($limit));
        $data['title'] = 'List Surat Perintah Jalan';
        $data['pagination'] = $query->latest()->get();

        return view('admin::surat_perintah_jalan.page-list', $data);
    }

    /**
     * Show detail suratPerintahJalan
     *
     * @param  Illuminate\Http\Request $request
     * @param  string $id
     * @return Illuminate\Http\Response
     */
    public function pageDetail(Request $request, $id)
    {
        $suratPerintahJalan = $this->findOrFail($id);

        $data['title'] = 'Detail Surat Perintah Jalan';
        $data['suratPerintahJalan'] = $suratPerintahJalan;

        return view('admin::surat_perintah_jalan.page-detail', $data);
    }
    public function exportPDF($id){
      
        $query = $this->suratPerintahJalan->query();
        $query->where('surat_perintah_jalan.id','=',$id);
            // "permohonan_pemakaian_kendaraan.pemohon",
            // "permohonan_pemakaian_kendaraan.tujuan",
            // "permohonan_pemakaian_kendaraan.keperluan");
        $data['surat']= $query->first();
        // dd($data);

        // dd($data);
        return view('admin::surat_perintah_jalan.page-export',$data);
    }

    public function sendEmail($id)
    {
        $query = $this->suratPerintahJalan->query();
        $query->where('surat_perintah_jalan.id','=',$id);

        $query->join('permohonan_pemakaian_kendaraan','surat_perintah_jalan.id_permohonan_pemakaian_kendaraan','=','permohonan_pemakaian_kendaraan.id')
        ->join('driver','surat_perintah_jalan.driver_id','=','driver.id')
        ->join('kendaraan','surat_perintah_jalan.kendaraan_id','=','kendaraan.id');
        $surat= $query->first();
        
        Mail::to($surat->email)->send(new DriverEmail($surat));

        return redirect()->back()->with('info', 'Email Terkirim');
    }

    /**
     * Display form create suratPerintahJalan
     *
     * @param  Illuminate\Http\Request $request
     * @return Illuminate\Http\Response
     */
    public function formCreate(Request $request)
    {
        $data['title'] = 'Form Create Surat Perintah Jalan';
        // phpcs:ignore
        $form = $this->form(new SuratPerintahJalan)->withAction(route('admin::surat-perintah-jalan.post-create'));

        $data['form'] = $form;

        return view('admin::surat_perintah_jalan.form-create', $data);
    }

    /**
     * Insert new suratPerintahJalan
     *
     * @param  Illuminate\Http\Request $request
     * @return Illuminate\Http\Response
     */
    public function postCreate(Request $request)
    {
        DB::beginTransaction();
        try {
            $spj = new SuratPerintahJalan;
            $spj->id_permohonan_pemakaian_kendaraan = $request->id_permohonan_pemakaian_kendaraan;
            $spj->driver_id = $request->driver_id;
            $spj->kendaraan_id = $request->kendaraan_id;
            $spj->biaya_toll = $request->biaya_toll;
            $spj->tujuan = $request->tujuan;
            $spj->jarak = $request->jarak;
            $spj->tanggal_berangkat = $request->tanggal_berangkat;
            $spj->tanggal_kembali = $request->tanggal_kembali;
            $spj->jam_berangkat = $request->jam_berangkat;
            $spj->jam_kembali = $request->jam_kembali;
            $spj->pengisian_bbm = $request->pengisian_bbm;
            $spj->total_biaya = $request->total_biaya;
            $spj->total_biaya_2 = $request->total_biaya_2;
            $spj->save();
            
            $driver = Driver::where('id',$request->driver_id)->first();
            if($driver->email != null){

                $driver->status_driver = 'Not Ready';
                $driver->save();
            }
            
            $kendaraan = Kendaraan::where('id',$request->kendaraan_id)->first();
            if($kendaraan->tipe_bbm != null){
                $kendaraan->status_kendaraan = 'Not Ready';
            }
            $kendaraan->save();
            
            $message = 'Surat Perintah Jalan has been created!';
            DB::commit();
            return redirect()->route('admin::surat-perintah-jalan.page-list')->with('info', $message);
        } catch (\Throwable $th) {
            DB::rollBack();
            dd($th);
        }
    }

    /**
     * Display form edit suratPerintahJalan
     *
     * @param  Illuminate\Http\Request $request
     * @param  string $id
     * @return Illuminate\Http\Response
     */
    public function formEdit(Request $request, $id)
    {
        $suratPerintahJalan = $this->findOrFail($id);
        
        $data['title'] = 'Form Edit Surat Perintah Jalan';
        // phpcs:ignore
        $data['form'] = $this->form($suratPerintahJalan)->withAction(route('admin::surat-perintah-jalan.post-edit', [$id]));

        return view('admin::surat_perintah_jalan.form-edit', $data);
    }

    /**
     * Update specified suratPerintahJalan
     *
     * @param  Illuminate\Http\Request $request
     * @param  string $id
     * @return Illuminate\Http\Response
     */
    public function postEdit(Request $request, $id)
    {
        $suratPerintahJalan = $this->findOrFail($id);
        $suratPerintahJalan->tujuan = $request->tujuan;
        $suratPerintahJalan->kendaraan_id = $request->kendaraan_id;
        $suratPerintahJalan->driver_id = $request->driver_id;
        $suratPerintahJalan->total_biaya = $request->total_biaya;
        $suratPerintahJalan->biaya_toll = $request->biaya_toll;
        $suratPerintahJalan->tanggal_berangkat = $request->tanggal_berangkat;
        $suratPerintahJalan->tanggal_kembali = $request->tanggal_kembali;
        $suratPerintahJalan->jam_berangkat = $request->jam_berangkat;
        $suratPerintahJalan->jam_kembali = $request->jam_kembali;
        $suratPerintahJalan->pengisian_bbm = $request->pengisian_bbm;
        $suratPerintahJalan->status_pj = $request->status_pj;
        $suratPerintahJalan->save();
        $message = 'Surat Perintah Jalan has been updated!';
        return redirect()->route('admin::surat-perintah-jalan.page-list')->with('info', $message);
    }

    /**
     * Delete specified suratPerintahJalan
     *
     * @param  Illuminate\Http\Request $request
     * @param  string $id
     * @return Illuminate\Http\Response
     */
    public function delete(Request $request, $id)
    {
        $suratPerintahJalan = $this->findOrFail($id);

        // Delete data
        $deleted = $suratPerintahJalan->delete();
        if (!$deleted) {
            $message = 'Something went wrong when delete Surat Perintah Jalan';
            return back()->with('danger', $message);
        }

        $message = 'Surat Perintah Jalan has been deleted!';
        return redirect()->route('admin::surat-perintah-jalan.page-list')->with('info', $message);
    }

    /**
     * Find suratPerintahJalan by 'id' or display 404 if not exists
     *
     * @return Illuminate\Http\Response
     */
    protected function findOrFail($id)
    {
        $suratPerintahJalan = $this->suratPerintahJalan->find($id);
        if (!$suratPerintahJalan) {
            return abort(404, 'Surat Perintah Jalan not found');
        }

        return $suratPerintahJalan;
    }

    public function sampai($id){

        $suratPerintahJalan = $this->findOrFail($id);
        $suratPerintahJalan->status_perjalanan = 'Sudah Sampai';
        $suratPerintahJalan->save();

        $driver = Driver::where('id',$suratPerintahJalan->driver_id)->first();
        if($driver->email != null){
            $driver->status_driver = 'Ready';
            $driver->save();
        }

        $kendaraan = Kendaraan::where('id',$suratPerintahJalan->kendaraan_id)->first();
        if($kendaraan->tipe_bbm != null){
            $kendaraan->status_kendaraan = 'Ready';
        }
        $kendaraan->save();

        $message = 'Surat Perintah Jalan Done!';
        return redirect()->route('admin::surat-perintah-jalan.page-list')->with('info', $message);
    }

    /**
     * Setup FormModel
     *
     * @param  App\Models\SuratPerintahJalan $suratPerintahJalan
     * @return LaraSpells\FormModel\FormModel
     */
    protected function form(SuratPerintahJalan $suratPerintahJalan)
    {
        return FormModel::make($suratPerintahJalan, [
            'id_permohonan_pemakaian_kendaraan' => [
                'input' => "select",
                'label' => "Permohonan Pemakaian",
                'maxlength' => "20",
                'options' => $this->getOptionsPermohonanPemakaianKendaraan(),
                'rules' => [
                    "max:20"
                ]
            ],
            'driver_id' => [
                'input' => "select",
                'label' => "Nama Driver",
                'maxlength' => "20",
                'options' => $this->getDriver(),
                'rules' => [
                    "max:20"
                ]
            ],
            'kendaraan_id' => [
                'input' => "select",
                'label' => "Nama Kendaraan",
                'maxlength' => "20",
                'options' => $this->getKendaraan(),
                'rules' => [
                    "max:20"
                ]
            ],
            'biaya_toll' => [
                'input' => "number",
                'label' => "Biaya Toll",
                'maxlength' => "255",
                'readonly' => true,
                'rules' => [
                    "required",
                    "max:255"
                ]
            ],
           
            'tujuan' => [
                'input' => "text",
                'label' => "Tujuan",
                'maxlength' => "255",
                'rules' => [
                    "required",
                    "max:255"
                ]
            ],
            'latlng' => [
                'input' => "map",
                'label' => "Koordinat",
                'maxlength' => "255",
                'rules' => [
                    // "required",
                    "max:255"
                ]
            ],
            'rute' => [
                'input' => "hidden",
                'label' => "Rute",
                'rules' => [
                    "required",
                ]
            ],
            'jarak' => [
                'input' => "text",
                'label' => "Jarak ( Pulang Pergi )",
                'maxlength' => "255",
                'readonly' => true,
                'rules' => [
                    "required",
                    "max:255"
                ]
            ],
            // 'lama_perjalanan' => [
            //     'input' => "text",
            //     'label' => "Lama Perjalanan",
            //     'maxlength' => "255",
            //     'readonly' => true,
            //     'rules' => [
            //         "required",
            //         "max:255"
            //     ]
            // ],
          
            'tanggal_berangkat' => [
                'input' => "datepicker",
                'label' => "Tanggal Berangkat",
                'rules' => [
                    "required"
                ]
            ],
            'tanggal_kembali' => [
                'input' => "datepicker",
                'label' => "Tanggal Kembali",
                'rules' => [
                    "required"
                ]
            ],
            'jam_berangkat' => [
                'input' => "timepicker",
                'label' => "Jam Berangkat",
                'rules' => [
                    "required"
                ]
            ],
            'jam_kembali' => [
                'input' => "timepicker",
                'label' => "Jam Kembali",
                'rules' => [
                    "required"
                ]
            ],
            'pengisian_bbm' => [
                'input' => "number",
                'label' => "Pengisian Bbm",
                'rules' => [
                    "required",
                    "max:10"
                ]
            ],
            'total_hide' => [
                'input' => "hidden"
            ],
            'total_hide_2' => [
                'input' => "hidden"
            ],
            'total_biaya' => [
                'input' => "number",
                'label' => "Total Biaya Ke 1",
                'maxlength' => "255",
                'readonly' => true,
                'rules' => [
                    "required",
                    "max:255"
                ]
            ],
            'total_biaya_2' => [
                'input' => "number",
                'label' => "Total Biaya Ke 2",
                'maxlength' => "255",
                'readonly' => true,
                'rules' => [
                    "required",
                    "max:255"
                ]
            ],
            // 'penanggung_jawab' => [
            //     'input' => "select",
            //     'label' => "Penanggung Jawab",
            //     'options' => $this->getPenanggungJawab(),
            //     'rules' => [
            //         "required"
            //     ]
            // ],
            // 'penanggung_jawab_pool' => [
            //     'input' => "select",
            //     'label' => "Penanggung Jawab Pool",
            //     'options' => $this->getPenanggungJawabPool(),
            //     'rules' => [
            //         // "required"
            //     ]
            // ],
            // 'status_pj' => [
            //     'input' => "select",
            //     'label' => "Status Penanggung Jawab",
            //     'options' => [
            //         [
            //             'label' => 'Pending',
            //             'value' => 'Pending'
            //         ],
            //         [
            //             'label' => 'Rejected',
            //             'value' => 'Rejected'
            //         ],
            //         [
            //             'label' => 'Approved',
            //             'value' => 'Approved'
            //         ]
            //     ],
            //     'rules' => [
            //         "required",
            //     ]
            // ],
            // 'status_pj_pool' => [
            //     'input' => "select",
            //     'label' => "Status PJ Pool",
            //     'options' => [
            //         [
            //             'label' => 'Pending',
            //             'value' => 'Pending'
            //         ],
            //         [
            //             'label' => 'Rejected',
            //             'value' => 'Rejected'
            //         ],
            //         [
            //             'label' => 'Approved',
            //             'value' => 'Approved'
            //         ]
            //     ],
            //     'rules' => [
            //         "required",
            //     ]
            // ],
        ])->withViewData([
            // phpcs:ignore
            'before_button_save' => '<a class="btn btn-default" href="'.route('admin::surat-perintah-jalan.page-list').'"><i class="fa fa-chevron-left"></i> Cancel</a>&nbsp;',
        ]);
    }

        /**
     * Get Penanggung Jawab
     *
     * @return array
     */
    protected function getPenanggungJawab()
    {
        return $this->karyawan
            ->select(['id as value', 'nama as label'])
            ->where('role', 'manajer')
            ->get()
            ->toArray();
    }

        /**
     * Get Penanggung Jawab
     *
     * @return array
     */
    protected function getPenanggungJawabPool()
    {
        return $this->karyawan
            ->select(['id as value', 'nama as label'])
            ->where('role', 'pj_pool')
            ->get()
            ->toArray();
    }

    protected function getOptionsPermohonanPemakaianKendaraan()
    {
        return PermohonanPemakaianKendaraan::query()
            // phpcs:ignore
            ->select(['id as value', \DB::raw('concat(pemohon," - ",penanggung_jawab, " - ", tujuan, " (", tanggal_berangkat, ")") as label')])
            ->orderBy('id', 'desc')
            ->where('status_pj','Approved')
            ->whereDoesntHave('spj')
            ->get()
            ->toArray();
    }
    protected function getdriver()
    {
        $segments = request()->segments();
        if($segments[2] == 'edit'){
            return Driver::query()
            // phpcs:ignore
            ->select(['id as value', \DB::raw('concat(nama_driver," - ", email ) as label')])
            ->get()
            ->toArray();
        }else{
            return Driver::query()
            // phpcs:ignore
            ->select(['id as value', \DB::raw('concat(nama_driver," - ", email ) as label')])
            ->where('status_driver','Ready')
            ->get()
            ->toArray();
        }
       
    }
    protected function getKendaraan()
    {
        $segments = request()->segments();
        if($segments[2] == 'edit'){
            return Kendaraan::query()
            // phpcs:ignore
            ->select(['id as value', \DB::raw('concat(nama_kendaraan, " - ", tipe_bbm," - ", no_pol) as label')])
            ->orderBy('id', 'asc')
            ->get()
            ->toArray();
        }else{
            return Kendaraan::query()
            // phpcs:ignore
            ->select(['id as value', \DB::raw('concat(nama_kendaraan, " - ", tipe_bbm," - ", no_pol) as label')])
            ->where('status_kendaraan','Ready')
            ->orderBy('id', 'asc')
            ->get()
            ->toArray();
        }
        
    }

    public function kendaraanDetail($id){

        return Kendaraan::where('id',$id)->first();
    }

    public function getDataPermohonan($id){

        $permohonan = PermohonanPemakaianKendaraan::where('id',$id)->first();

        return $permohonan;
    }
}